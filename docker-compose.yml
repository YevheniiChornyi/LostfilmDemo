version: '3'
services:
  mysql:
    container_name: app_db
    ports:
      - "3306:3306"
    image: "mysql"
    volumes:
      - ./docker/app.cnf:/etc/mysql/conf.d/app.cnf
    environment:
      - MYSQL_ROOT_PASSWORD=root2021
      - MYSQL_DATABASE=lostfilm
  wiremock:
    container_name: app_mock
    ports:
      - "8089:8089"
    image: "wiremock/wiremock"
    command: --port 8089
  #    Placing one (and only one) of slf4j-nop.jar slf4j-simple.jar, slf4j-log4j12.jar, slf4j-jdk14.jar or logback-classic.jar on the class path should solve the problem.
  zookeeper:
    container_name: app_zookeeper
    image: confluentinc/cp-zookeeper:5.3.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    logging:
      driver: none
  kafka:
    container_name: app_kafka
    image: confluentinc/cp-kafka:5.3.1
    ports:
      - "9092:9092"
    depends_on:
      - "zookeeper"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 20000
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS: 40000
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_TOOLS_LOG4J_LOGLEVEL: INFO
    logging:
      driver: none